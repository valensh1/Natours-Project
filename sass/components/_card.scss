.card {
    perspective: 150rem; // This makes the card when it is flipped look like its coming more towards you; The higher the rem the more dramatic the affect
    -moz-perspective: 150rem; // Needed to work in Firefox browswer
    position: relative;
    height: 50rem; // This is needed because when you use position:absolute with a child like below the parent loses its height. So we need this to set the height = to the child of &__side

    &__side {  // Class for the backside of our card
        color:#fff;
        font-size: 2rem;
        height: 50rem;
        transition: all .8s ease; // Sets the duration of the animation of rotating the cards to .8s; If did not have ease animation specified it goes with most simple one which is linear
        position: absolute; // Need to position cards so that back can sit on bottom of front
        top: 0;
        left: 0;
        width: 100%; // Give both cards 100% width of the parent which is the row so now it fills the entire width of the column within the row
        backface-visibility: hidden; // Determines in a transformed property that is rotated if there is a backside that would have its back to the user and it makes that backside hidden
        border-radius: .3rem;
        box-shadow: 0 1.5rem 4rem rgba($color-black, .15);


        &--front {
            background-color: $color-white;
        }

        &--back {
            background-color: green;
            transform: rotateY(180deg); // Backside before any rotation is already rotated 180deg because that's supposed to be its normal position; This being rotated 180deg is if you are looking at its back.
        
            &-1 {
                background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark);
            }
        }
    }
   

    &:hover &__side--front { // same thing as .card:hover .card__side--front selector in regular CSS
        transform: rotateY(180deg); // Rotation of tour cards to get to backside
    }

    &:hover &__side--back { // same thing as .card:hover .card__side--back selector in regular CSS
        transform: rotateY(0); // When backside is hovered it goes to 0 which basically means it rotates from having its back facing the user to rotating to facing the user.
    }
}
