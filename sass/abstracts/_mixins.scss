@mixin clearfix {  /* This mixin is used when using floats because when using floats it gives a height of 0 and no further styling can be done such as background-color etc. This mixin fixes this to give it height again. */
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin absCenter { /* mixin for centering inline content within a block element. Used this on our popup once you click book now */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* 

MEDIA QUERY MANAGER 

0 - 600px:          Phone
600 - 900px:        Tablet Portrait
900 - 1200px:       Tablet Landscape
[1200 - 1800px]:    Where our normal styles apply
1800px +:           Big desktop

--> rem's don't work good for media queries for certain browsers so even though we used rem throughout our project we are going to use em's here which work much better with media queries 
--> 1em = 16px
--> convert screen sizes above into em's
        > Phone = 600px / 16px = 37.5em
        > Phone = 900px / 16px = 56.25em
        > Phone = 1200px / 16px = 75em
        > Phone = 1800px / 16px = 112.5em

ORDER OF MEDIA QUERY - Base + typography > general layout + grid > page layout > components
*/

@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content }; 
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content };
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content };
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content };
    }
}